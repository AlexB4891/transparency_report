---
title: "Documento análisis 2023"
author: "Alex Bajaña"
format: html
editor: visual
code-fold: true
execute: 
  warning: false
  message: false
---

## Reading data & libraries

```{r}
library(tidyverse)
library(gt)
library(scales)
library(datawizard)

tabla <- read_rds( "../../01_DATA/APS/tabla_modelos_aps_101_reclas.rds")

cpi <- tibble::tibble(
  year = c(2010:2012,2012:2017,2017:2019),
  cpi = c(86.09,90.75,94.53,94.53, 97.08, 100.64, 104.05, 105.21, 105, 105,105.28,105.21),
  periodo = c(rep("otro",3),rep("periodo",6),rep("otro2",3))
) 

cpi_unique <- cpi %>% 
  distinct(year,cpi) 

cpi_base <- cpi_unique %>% 
  filter(year == 2014) %>% 
  pull(cpi)


cpi_unique <- cpi_unique %>% 
  mutate(inflacion = ((cpi/lag(cpi))-1)*100,
         deflactor = cpi/cpi_base)

cpi <- cpi %>% 
  left_join(cpi_unique)

tabla <-  cpi_unique %>% 
  select(anio_fiscal = year,deflactor) %>%
  right_join(y = tabla)
  
```

```{r}
cpi %>% 
  mutate(periodo = factor(periodo,c("otro","periodo","otro2"))) %>% 
  ggplot(aes(x = year, y = inflacion,color = periodo)) +
  geom_point(size = 2) +
  geom_line() +
  geom_text(aes( label = number(inflacion,accuracy = 0.01),vjust = 2.5)) +
  geom_vline(aes(xintercept = 2014.5),linetype = "dashed") +
  expand_limits(y = c(-1,6.5),
                x = 2010:2020) +
  scale_color_manual(values = c("grey","darkblue","grey")) +
  scale_x_continuous(breaks = 2010:2019) +
  theme_minimal() +
  theme(legend.position = "none",
        plot.caption = element_text(hjust = 0.5)) +
  labs(title = "Evolución de la serie de inflación",
       subtitle = "Año base 2014",
       x = "",
       y = "Inflación anual",
       caption = str_wrap("El tramo azul indica el periódo de estudio 2012-2017. La linea cortada indica la implementación de la reforma que es nuestro tema de estudio.",100))
  

```

## Step 1: Core sample

Three criteria:

1.  Active in 2014: Firms that have fille C.I.T 
2.  Positive income in 2014
3.  Has filled at least once the APS in 2012-2014

```{r}

# Core sample:

# 1. Active  in 2014 = filled CIT & positive revenues:

active_2014 <- tabla %>%
  select(anio_fiscal,
         en_f101,
         identificacion_informante_anon,
         total_income) %>% 
  filter(anio_fiscal == 2014,
         en_f101 == 1,
         total_income > 0) %>% 
  mutate(active_2014 = 1) %>% 
  select(identificacion_informante_anon,
         active_2014)

# 2.Has at leat one APS in 2012-2014:

aps_pre <- tabla %>% 
  filter(anio_fiscal <= 2014,
         dummy_aps_declarado == 1) %>% 
  distinct(identificacion_informante_anon)  %>% 
  mutate(aps_1214 = 1)

# Joint condition:

core_sample <- aps_pre %>% 
  inner_join(active_2014)

# APS absent:

absent_aps <-active_2014 %>% 
  anti_join(aps_pre)

```

First counts:

|                                           |                       |
|-------------------------------------------|-----------------------|
| Active firms in 2014:                     | `r nrow(active_2014)` |
| Firms with at least one APS in 2012-2014: | `r nrow(aps_pre)`     |
| Firms in core sample:                     | `r nrow(core_sample)` |

Now we have the number of firms according to their revenues and their declarations of the APS:

```{r}

# Filter the core sample just for pre period:
core_12_14 <- tabla %>% 
  filter(anio_fiscal <= 2014) %>% 
  inner_join(core_sample) %>% 
  mutate(non_cero_income = as.numeric(total_income > 0),
         cero_income = as.numeric(total_income == 0)) 

# Count how many firms has zero revenues and positive revenues (yearly)
revenues <- core_12_14 %>% 
  group_by(anio_fiscal) %>% 
  summarise(across(.cols = c(non_cero_income,
                             cero_income),
                   .fns = ~sum(.x,na.rm = T)))

# How many firms has no APS (yearly):
summary_pre <- tabla %>% 
  inner_join(absent_aps) %>% 
  group_by(anio_fiscal) %>% 
  summarise(no_aps = n_distinct(identificacion_informante_anon)) %>% 
  inner_join(revenues)

# How many firms has no APS in all three years:
global_pre_1 <- tabla %>% 
  filter(anio_fiscal <=2014) %>% 
  inner_join(absent_aps) %>% 
  summarise(no_aps = n_distinct(identificacion_informante_anon))

# Make the global summary:
summ_row <- bind_cols(
  core_12_14 %>% 
    group_by(non_cero_income) %>% 
    summarise(positive = n_distinct(identificacion_informante_anon)) %>% 
    filter(non_cero_income == 1) %>% 
    select(-non_cero_income,
           non_cero_income = positive),
  
  core_12_14 %>% 
    group_by(cero_income) %>% 
    summarise(cero = n_distinct(identificacion_informante_anon)) %>% 
    filter(cero_income == 1) %>% 
    select(-cero_income,
           cero_income = cero),
  
  global_pre_1
)

# Decorate the table of global summary:
summ_row <- summ_row %>% 
  mutate(stat = "Unique firms",
         anio_fiscal = "N (2012-2014)")


# Decorate the yearly table:
first_count <- summary_pre %>% 
  mutate(
    anio_fiscal = as.character(anio_fiscal),
    stat = "Pre reform period") %>% 
  bind_rows(summ_row)

# Save temporal output:
write_tsv(first_count,"new_first_group.txt")

# Print table:
first_count %>% 
  group_by(stat) %>% 
  gt() %>% 
  cols_label(anio_fiscal = "",
             no_aps = "No APS declared",
             non_cero_income = "Positive revenues",
             cero_income = "Zero revenue") %>% 
  data_color(columns = "anio_fiscal",
             colors = scales::col_factor(
      palette = c("darkblue"),
      domain = c(2014),
      na.color = "white"
    ))

  
```

In the previous table, the year 2014 is highlighted in blue because we **construct the core sample** based in *active* status for firms in 2014.

We will compare firms that have and does not have APS between the pre and post period (the values show the mean in each period, the counts are considering unique firms across the years of each period):

```{r}
tabla_deflact <- tabla %>% 
  # Unir los activos:
  inner_join(active_2014) %>% 
  # Agregar marca sin APS:
  left_join(absent_aps %>% 
              rename(sin_aps = active_2014)) %>% 
  # Llevar los valores a precios constantes:
  mutate(across(c(total_sales,total_income,tax_liability),
                ~.x/deflactor)) 

# Tabla solo para el 2014:
tabla_deflact_14 <- tabla_deflact %>% 
  filter(anio_fiscal == 2014) %>% 
  mutate(post = 2)

stats_aps <- tabla_deflact %>% 
  bind_rows(tabla_deflact_14) %>% 
  # Agrupamos por post y falta de APS:
  group_by(post,sin_aps) %>% 
  # Resumenes a nivel de variable-periodo:
  summarise(n = n_distinct(identificacion_informante_anon),
            mean_sales = mean(total_sales,na.rm = T),
            sd_sales = sd(total_sales,na.rm = T),
            median_sales = median(total_sales,na.rm = T),
            mean_income = mean(total_income,na.rm = T),
            sd_income = sd(total_income,na.rm = T),
            median_income = median(total_income,na.rm = T),
            mean_tax_liability = mean(tax_liability,na.rm = T),
            sd_tax_liability = sd(tax_liability,na.rm = T),
            median_tax_liability = median(tax_liability,na.rm = T)) %>% 
  # Formato largo:
  pivot_longer(cols = c(matches("^mean"),
                        matches("^median"),
                        matches("^sd"),
                        n),
               names_to = "variables",
               values_to = "valores") %>% 
  # Algunas modificaciones sobre las variables y factores:
  mutate(sin_aps = replace_na(sin_aps,0),
         sin_aps = factor(sin_aps,c(0,1),c("APS declared","APS absent")),
         post = factor(post,c(2,0,1),c("Year = 2014","Pre reform","Post reform"))) %>% 
  # Cambio a formato ancho:
  pivot_wider(names_from = sin_aps,values_from = valores) %>% 
  # Últimos cambios sobre las variables:
  mutate(variables = factor(variables,levels = c("n",
                                                 "mean_sales",
                                                 "median_sales",
                                                 "sd_sales",
                                                 "mean_income",
                                                 "median_income",
                                                 "sd_income",
                                                 "mean_tax_liability",
                                                 "median_tax_liability",
                                                 "sd_tax_liability"),
                            labels = c("N",
                                       "Mean sales",
                                       "Median sales",
                                       "SD sales",
                                       "Mean income",
                                       "Median income",
                                       "SD income",
                                       "Mean tax liabilty",
                                       "Median tax liability",
                                       "SD tax liability")),
         across(.cols = one_of(c("APS declared","APS absent")),
                .fns = ~if_else(variables == "N",
                                scales::number(.x,accuracy = 1),
                                scales::dollar(.x,big.mark = " "))))

# Guardar resumen temporal:
write_tsv(stats_aps,"new_stats_group.txt")

# Impresión de la tabla:
stats_aps %>% 
  group_by(post) %>% 
  arrange(variables) %>% 
  gt() %>% 
  cols_label(variables = "") 
```

#### Distributions of `log(sales)` between firms with or without APS annex declared

```{r}

# For year = 2014: calculate the log sales:
# Add some factors:
dist_df <- 
  tabla_deflact_14 %>% 
  mutate(sin_aps = replace_na(sin_aps,0),
         sin_aps = factor(sin_aps,c(0,1),c("APS declared","APS absent")),
         post = factor(post,c(2,0,1),c("Year = 2014","Pre reform","Post reform"))) %>% 
  mutate(
    positive_sales = if_else(total_sales == 0, NA_real_,1),
    log_sales = log(total_sales*positive_sales))

# Statistics of groups:
stat_df <- dist_df %>% 
  group_by(sin_aps) %>% 
  summarise(
    firms = n_distinct(identificacion_informante_anon),
    positive = sum(positive_sales,na.rm = T),
    mean = mean(log_sales,na.rm = T),
    mean_t = mean(total_sales))

# Plot of the distributions:
dist_df %>% 
  ggplot() +
  geom_histogram(aes(x = log_sales,fill = sin_aps),alpha = 0.6) + 
  geom_vline(data = stat_df,aes(xintercept = mean)) +
  facet_grid(sin_aps ~ .,scales = "free") +
  scale_y_continuous(labels = ~number(.x,accuracy = 1)) +
  theme_minimal() +
  labs(title = "Comparative distributions between firms with and without APS annex",
       subtitle = "Only positive sales in 2014",
       caption = "The scale of Y axis is adjusted to improve readability. The vertical line shows the mean of each distribution. In the following table there's a summary to complement this graphic.")
```

Statistics to understand the both distribution:

```{r}

stat_df %>% 
  mutate(firms = number(firms,big.mark = " ",accuracy = 1),
        positive = number(positive,big.mark = " ",accuracy = 1),
        mean = number(mean, big.mark = " ",accuracy = 0.001,decimal.mark = "."),
        mean_t = dollar(mean_t, big.mark = " ",accuracy = 0.01,decimal.mark = ".")) %>% 
  pivot_longer(-sin_aps) %>% 
  pivot_wider(names_from = sin_aps,values_from = value) %>% 
  mutate(name = factor(name,
                       c("firms","positive","mean","mean_t"),
                       c("N (Firms)","Firms with positive sales","Mean log(Sales)","Mean sales USD"))) %>% 
  gt() %>% 
  cols_label(name = "",
             `APS declared` = md("**APS declared**"),
             `APS absent` = md("**APS absent**"))
```


## Step 2: groups within core sample

### Classification of firms according to the residence of their ownership

-   Effective participation in tax havens \>= 50 \~ "T-Maj",
-   Effective participation in tax havens \> 5 & Effective participation in tax havens \< 50 \~ "T-Min",
-   Effective participation abroad \>= 50 & Effective participation in tax havens \< 5 \~ "C-Maj",
-   Effective participation abroad \> 5 & Effective participation abroad \< 50 & Effective participation in tax havens \< 5 \~ "C-Min",
-   Effective domestic participation \> 95 & Effective participation in tax havens \< 5 \~ "C-Domestic",
-   In any other case \~ "Domestic"

#### Number of firms in each assign group

```{r}

# Asignación de grupo de acuerdo al año 2014:
assign_2014 <- tabla %>% 
  inner_join(core_sample) %>% 
  filter(anio_fiscal == 2014) %>% 
  mutate(
    across(c(porcentaje_aps_pff,porcentaje_aps_ext,porcentaje_aps_nac),
           ~if_else(.x > 100,100,.x)),
    
    group_assign = case_when(
        porcentaje_aps_pff >= 50 ~ "T-Maj",
        porcentaje_aps_pff > 5 & porcentaje_aps_pff < 50 ~ "T-Min",
        porcentaje_aps_ext >= 50 & porcentaje_aps_pff < 5 ~ "C-Maj",
        porcentaje_aps_ext > 5 & porcentaje_aps_ext < 50 & porcentaje_aps_pff < 5 ~ "C-Min",
        porcentaje_aps_nac > 95 & porcentaje_aps_pff < 5 ~ "C-Domestic",
        TRUE ~ "Domestic"
  )) %>% 
  select(identificacion_informante_anon,group_assign)

# Unión de la asignación, la core y la core sample:
tabla_core <- tabla %>% 
  inner_join(core_sample) %>% 
  left_join(assign_2014)

summ_group <- tabla_core  %>% 
  filter(anio_fiscal == 2014) %>%
  group_by(anio_fiscal,
           group_assign) %>% 
  summarise(mean_pnac = mean(porcentaje_aps_nac, na.rm = T),
            min_pnac = min(porcentaje_aps_nac, na.rm = T),
            max_pnac = max(porcentaje_aps_nac, na.rm = T),
            mean_pext = mean(porcentaje_aps_ext, na.rm = T),
            min_pext = min(porcentaje_aps_ext, na.rm = T),
            max_pext = max(porcentaje_aps_ext, na.rm = T),
            mean_ppff = mean(porcentaje_aps_pff, na.rm = T),
            min_ppff = min(porcentaje_aps_pff, na.rm = T),
            max_ppff = max(porcentaje_aps_pff, na.rm = T),
            n = n_distinct(identificacion_informante_anon)) %>% 
  pivot_longer(cols = -c(anio_fiscal,group_assign),
               values_to = "value",
               names_to = "stat") %>% 
  separate(stat,into = c("var","prop")) %>% 
  pivot_wider(names_from = group_assign,values_from = value) %>% 
  mutate( 
          prop = factor(prop,c("pnac","pext","ppff"),
                        c("Domestic partiticpation",
                          "Foreign participation",
                          "Tax haven partiicpation")))

write_tsv(summ_group,"new_count_group.txt")
```

Considering the `r nrow(core_sample)` firms in 2014:

```{r}
fila_1 <- summ_group %>% 
  ungroup() %>% 
  select(-anio_fiscal) %>% 
  mutate(label = "Firms in core sample (2014)") %>% 
  filter(var == "n") %>% 
  select(-var,-prop) %>% 
  mutate(across(.cols = 1:6,
                .fns = number,accruracy = 1))

fila_2 <- summ_group %>% 
  ungroup() %>% 
  select(-anio_fiscal) %>% 
  mutate(label = "Proportions (2014)") %>% 
  filter(var == "n") %>% 
  select(-var,-prop) %>% 
  mutate(across(.cols = 1:6,
                .fns = ~percent(.x/nrow(core_sample),accuracy = 0.01)))


weigthed <- tabla_core  %>% 
  filter(anio_fiscal == 2014) %>%
  group_by(anio_fiscal,
           group_assign) %>% 
  summarise(sum_sales = sum(total_sales,na.rm = T),
            sum_assets = sum(total_assets,na.rm = T)) %>% 
  ungroup() %>% 
  mutate(across(matches("sum_"),~.x/sum(.x)),
         across(matches("sum_"),percent,accuracy = 0.01)) %>% 
  select(-anio_fiscal) %>% 
  pivot_longer(-group_assign) %>% 
  pivot_wider(names_from = group_assign,values_from = value) %>% 
  rename(label = name ) %>% 
  mutate(label = if_else(label == "sum_sales",
                         "Sales weighted proportion",
                         "Assets weighted proportion"))


bind_rows(fila_1,fila_2,weigthed )%>% 
  select(label,everything()) %>% 
  ungroup() %>% 
  gt() %>% 
  data_color(columns = 1,
             colors = scales::col_factor(
      palette = c("darkblue"),
      domain = c(2014)
    )) %>% 
  cols_label(
    label = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  )

```

#### Effective participation in the different residence

```{r}

summ_group %>% 
  filter(anio_fiscal == 2014,
         var != "n") %>% 
  mutate(var = factor(var,c("mean","max","min"),c("Mean","Max","Min"))) %>% 
  group_by(prop) %>% 
  gt() %>% 
  data_color(columns = 1,
             colors = scales::col_factor(
      palette = c("darkblue"),
      domain = c(2014)
    )) %>% 
  cols_label(
    anio_fiscal = "",
    var = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) %>% 
  fmt_number(columns = 3:9,decimals = 3)

```

#### Stats for the core sample clasified:

```{r}

sum_stats <- tabla_core %>% 
  filter(anio_fiscal == 2014) %>%
  mutate(across(c(total_income,
                  net_profits,
                  total_assets,
                  net_profit_margin,
                  total_sales),
                ~replace_na(.x,0)),
         across(c(total_income,
                  net_profits,
                  total_assets,
                  net_profit_margin,
                  total_sales),
                ~.x/deflactor),
         across(c(net_profits,total_sales),
                ~  winsorize(.x, method = "percentile",threshold = 0.05),.names = "{.col}_w"),
         net_profit_margin_w = net_profits_w/total_sales_w,
         net_profit_margin_w = case_when(net_profit_margin_w > 1 | is.infinite(net_profit_margin_w) ~ 1,
                                  is.nan(net_profit_margin_w)  ~ 0,
                                  TRUE ~ net_profit_margin_w),
         positive_prof = net_profits > 0
         ) %>% 
  group_by(group_assign) %>% 
  summarise(mean__rev = mean(total_income, na.rm = T),
            median__rev = median(total_income, na.rm = T),
            sd__rev = sd(total_income, na.rm = T),
            mean__log_rev = mean(log(total_income + 1), na.rm = T),
            median__log_rev = median(log(total_income + 1), na.rm = T),
            sd__log_rev = sd(log(total_income + 1), na.rm = T),
            mean__prof = mean(net_profits, na.rm = T),
            median__prof = median(net_profits, na.rm = T),
            sd__prof = sd(net_profits, na.rm = T),
            mean__profmagin = mean(net_profit_margin_w, na.rm = T),
            median__profmagin = median(net_profit_margin_w, na.rm = T),
            sd__profmagin = sd(net_profit_margin_w, na.rm = T),
            mean__assets = mean(log(total_assets + 1), na.rm = T),
            median__assets = median(log(total_assets + 1), na.rm = T),
            sd__assets = sd(log(total_assets + 1), na.rm = T),
            n__positive = sum(positive_prof,na.rm = T)) 





sum_stats <- sum_stats %>% 
  pivot_longer(cols = -group_assign,
               values_to = "value",
               names_to = "stat") %>% 
  separate(stat,into = c("var","prop"),sep = "__") %>% 
  pivot_wider(names_from = group_assign,values_from = value) %>% 
  mutate( var = factor(var,c("mean","median","sd"),c("Mean","P50","SD")),
          prop = factor(prop,c("rev","log_rev","prof","profmagin","assets","positive"),
                        c("Revenues",
                          "log(Revenues)",
                          "Net profits",
                          "Net profit margin",
                          "log(Assets)",
                          "N (positive profits)")))

write_tsv(sum_stats,"aggregated_summary.txt")

sum_stats %>% 
  filter(prop != "N (positive profits)") %>% 
  group_by(prop) %>% 
  gt() %>% 
  cols_label(
    var = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) %>% 
  fmt_number(columns = 3:8,decimals = 3,dec_mark = ".",sep_mark = " ")

```

#### Firms with positive profits:

```{r}

summ_group %>% 
  ungroup() %>% 
  select(-anio_fiscal) %>% 
  # mutate(label = "Firms in core sample (2014)") %>% 
  filter(var == "n") %>% 
  select(-var,-prop) %>% 
  pivot_longer(
    cols = everything(),
    values_to = "Firms in core sample",
               names_to = "group") %>% 
  inner_join(
    sum_stats %>% 
      filter(prop == "N (positive profits)") %>% 
      pivot_longer(3:8) %>% 
      select(-var,`N (positive profits)` = value,-prop,group = name)) %>% 
  
  mutate(
    `Share (positive profits)`  = percent( `N (positive profits)`/`Firms in core sample`),
    `Firms in core sample` = number(`Firms in core sample`,
                                    big.mark = " "),
    `N (positive profits)` = number(`N (positive profits)`,
                                    big.mark = " ")
  ) %>% 
  pivot_longer(cols = 2:4) %>% 
  pivot_wider(names_from = group,values_from = value) %>% 
  gt() %>% 
  cols_label(
    name = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) %>% 
  gt::tab_footnote(footnote = "The share is calculated respect of the core sample values shown in 'Number of firms in each assign group' section.",locations = cells_body(columns = 1,rows = 3))
```

## Step 3:

### Active firm definition:

Filled CIT with non zero revenue

#### Count: By year

```{r}

tabla_core <- tabla_core %>% 
  mutate(
    across(c(total_income,
             net_profits,
             total_assets,
             net_profit_margin,
             total_sales,
             en_f101,
             dummy_aps_declarado),
           ~replace_na(.x,0)),
    across(c(total_income,
             net_profits,
             total_assets,
             net_profit_margin,
             total_sales),
           ~.x/deflactor),
    positive_revenues = total_income > 0,
    fill = positive_revenues & en_f101 == 1 & dummy_aps_declarado == 1,
    poitive_cit = positive_revenues & tasa_ir > 0) 

conteos_3 <- tabla_core %>% 
  group_by(anio_fiscal,group_assign) %>% 
  summarise(
    `Active (Non-zero revenue)` = sum(positive_revenues,na.rm = T),
    `Count filled CIT + APS` = sum(fill,na.rm = T),
    `CIT > 0` = sum(poitive_cit,na.rm = T)
  )

write_tsv(conteos_3,"count_active_firms.txt")

conteos_3 %>% 
  pivot_longer(-c(anio_fiscal,group_assign)) %>% 
  pivot_wider(names_from = group_assign,values_from = value) %>% 
  group_by(name) %>% 
  gt() %>% 
  cols_label(
    anio_fiscal = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 

```

Revenue growth:

- The base year is 2014
- We take the first year in post period
- And calculate if the total revenue in the first year of the post period is greater than the revenues in 2014

```{r}



tabla_core_p <- tabla_core %>%
  select(anio_fiscal,
         identificacion_informante_anon,
         porcentaje_aps_ext,
         porcentaje_aps_pff,
         porcentaje_aps_nac,
         group_assign,
         total_income) %>%
  mutate(
    across(c(porcentaje_aps_ext,porcentaje_aps_pff,porcentaje_aps_nac),
           ~replace_na(.x,0)),
    total_percent = porcentaje_aps_ext + porcentaje_aps_pff + porcentaje_aps_nac) %>%
  group_by(identificacion_informante_anon) %>%
  mutate(primera = min(anio_fiscal)) %>%
  arrange(identificacion_informante_anon,anio_fiscal) %>% 
  ungroup()

write_rds(tabla_core_p,"tabla_core_sample_porcentage.rds",compress = "gz")

aps_core_2014 <- tabla_core_p %>% 
  filter(anio_fiscal == 2014)

ids_core <- aps_core_2014 %>% 
  select(identificacion_informante_anon) 

primera_post <- tabla_core_p %>% 
  ungroup() %>% 
  filter(anio_fiscal >= 2015) %>% 
  inner_join(ids_core) %>% 
  mutate(indicador = 2018 - anio_fiscal) %>% 
  group_by(identificacion_informante_anon) %>% 
  top_n(n = 1,wt = indicador) %>% 
  ungroup()


primera_post <- primera_post %>% 
  rename_with(.cols = -identificacion_informante_anon,
              ~str_c(.x,"_post"))

aps_core_2014 <- aps_core_2014 %>% 
  rename_with(.cols = -identificacion_informante_anon,
              ~str_c(.x,"_2014"))

compar <- aps_core_2014 %>% 
  left_join(primera_post)

compar %>% 
  mutate(revenue_growth = as.numeric(total_income_post > total_income_2014)) %>% 
  group_by(group_assign_2014) %>% 
  summarise(`Revenue growth`  = sum(revenue_growth ,na.rm = T)) %>% 
  inner_join(
    sum_stats %>% 
      filter(prop == "N (positive profits)") %>% 
      pivot_longer(3:8) %>% 
      select(-var,`N (positive profits)` = value,
             -prop,group_assign_2014 = name)) %>% 
  inner_join(summ_group %>% 
               ungroup() %>% 
               select(-anio_fiscal) %>% 
               # mutate(label = "Firms in core sample (2014)") %>% 
               filter(var == "n") %>% 
               select(-var,-prop) %>% 
               pivot_longer(
                 cols = everything(),
                 values_to = "Firms in core sample",
                 names_to = "group_assign_2014")) %>% 
  pivot_longer(cols = 2:4) %>% 
  pivot_wider(names_from = group_assign_2014,values_from = value) %>% 
  gt() %>% 
  cols_label(
    name = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 


```


### Sub-samples:

#### Sub sample 1:

Conditions:
- Condition of core sample in 2014
- Reported a new APS in the post period 2015-2017

```{r}

resumen_new_aps <- compar %>% 
  count(estado = is.na(anio_fiscal_post)) %>% 
  mutate(estado = factor(estado,c(T,F),c("No new APS","Firms with new APS")),
         porc = n/sum(n))

total_row <- resumen_new_aps %>% 
  summarise(n = sum(n)) %>% 
  mutate(estado = "Total")

resumen_new_aps %>% 
  bind_rows(total_row) %>% 
  gt() %>% 
  cols_label(estado = md("**Estado**"),
             n = md("**Firms**"),
             porc = md("**Share**")) %>% 
  fmt_number(columns = n,decimals = 0,sep_mark = " ") %>% 
  fmt_percent(porc) %>% 
  sub_missing(columns = everything(),missing_text = "")
```

Classification of firms with "No new APS":

```{r}


summ_group %>% 
  ungroup() %>% 
  select(-anio_fiscal) %>% 
  # mutate(label = "Firms in core sample (2014)") %>% 
  filter(var == "n") %>% 
  select(-var,-prop) %>% 
  pivot_longer(
    cols = everything(),
    values_to = "Firms in core sample",
    names_to = "group_assign_2014") %>% 
  inner_join(compar %>% 
               filter(is.na(anio_fiscal_post)) %>% 
               count(group_assign_2014) %>% 
               rename(`Firms with no new APS` = n ) 
             ) %>% 
  mutate(`Proportion of firms with no new APS` = `Firms with no new APS`/`Firms in core sample`,
        `Firms with no new APS` = number(`Firms with no new APS`,big.mark = " ",accuracy = 1),
        `Firms in core sample` = number(`Firms in core sample`,big.mark = " ",accuracy = 1),
        `Proportion of firms with no new APS` = percent(`Proportion of firms with no new APS`,accuracy = 0.001,big.mark = " ")) %>%
          pivot_longer(-group_assign_2014) %>% 
  pivot_wider(names_from = group_assign_2014,values_from = value) %>% 
  gt() %>% 
  cols_label(
    name = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 
```


Let's take the following definition of change:

 -  If the Assigned group in 2014 is "T-Maj" & the effective participation in tax haven post reform  is  < 50
 -  If the Assigned group in 2014 is "T-Min" & the effective participation in tax haven post reform  is  < 5 
 -  If the Assigned group in 2014 is "C-Maj" & the effective participation in foreign non tax haven country post reform  is  < 50 
 - If the Assigned group in 2014 is "C-Min" & the effective participation in foreign non tax haven country post reform is  < 5 
 
In any other case we assume there's no change in ownership.


```{r}
# tabla_post <- tibble(anio_fiscal = 2015:2017)
completos <- tabla_core_p %>% 
  filter(anio_fiscal >= 2015) %>% 
  select(identificacion_informante_anon,anio_fiscal) %>%
  ungroup() %>% 
  expand(identificacion_informante_anon,anio_fiscal)


compar2 <- tabla_core_p %>% 
  filter(anio_fiscal >= 2015) %>% 
  right_join(completos) %>% 
  fill(everything(),.direction = "down") %>% 
  filter(anio_fiscal >= primera) %>% 
  inner_join(aps_core_2014) %>% 
  mutate(cambio = case_when(
    group_assign_2014 == "T-Maj" & porcentaje_aps_pff < 50 ~ 1,
    group_assign_2014 == "T-Min" & porcentaje_aps_pff < 5 ~ 1,
    group_assign_2014 == "C-Maj" & porcentaje_aps_ext < 50 ~ 1,
    group_assign_2014 == "C-Min" & porcentaje_aps_ext < 5 ~ 1,
    TRUE ~ 0
  ))

compar2 %>% 
  group_by(anio_fiscal,group_assign_2014) %>% 
  summarise(cambio = sum(cambio,na.rm = T)) %>% 
  pivot_wider(names_from = group_assign_2014,
              values_from = cambio) %>% 
  ungroup() %>% 
  gt() %>% 
  cols_label(
    anio_fiscal = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 
```

We also check any changes in the percentages of participation in each residence:

- Considering the pivot year 2014
- Considering the first APS declared in the post period
- We check if each of the participation (domestic, foreign, tax haven) has any change respect to the pivot year

```{r}

compar3 <- tabla_core_p %>% 
  filter(anio_fiscal >= 2015) %>% 
  right_join(completos) %>% 
  fill(everything(),.direction = "down") %>% 
  filter(anio_fiscal >= primera) %>% 
  inner_join(aps_core_2014) %>% 
  mutate(
    cambio_pff  = as.numeric(abs(porcentaje_aps_pff - porcentaje_aps_pff_2014) > 0.05),
    cambio_ext = as.numeric(abs(porcentaje_aps_ext - porcentaje_aps_ext_2014) > 0.05),
    cambio_nac = as.numeric(abs(porcentaje_aps_nac - porcentaje_aps_nac_2014) > 0.05),
    indicador_cambio = cambio_pff + cambio_ext + cambio_nac,
    cambio = as.numeric(indicador_cambio > 0))

compar3 %>% 
  group_by(anio_fiscal,group_assign_2014) %>% 
  summarise(cambio = sum(cambio,na.rm = T)) %>% 
  pivot_wider(names_from = group_assign_2014,
              values_from = cambio) %>% 
  ungroup() %>% 
  gt() %>% 
  cols_label(
    anio_fiscal = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 

```


How many firms have decreased the tax haven participation by 5%? How many reduced their tax haven participation to 0?

```{r}
compar2 %>% 
  ungroup() %>% 
  mutate(
    diferencia_pff = porcentaje_aps_pff_2014 - porcentaje_aps_pff,
    dummy_change_5ff = as.numeric(diferencia_pff > 4.95),
    dummy_change_0ff = as.numeric(porcentaje_aps_pff <= 0.05 & porcentaje_aps_pff_2014 >0)
  ) %>% 
  group_by(anio_fiscal,group_assign_2014) %>% 
  summarise(cambio5 = sum(dummy_change_5ff,na.rm = T),
            cambio_total = sum(dummy_change_0ff,na.rm = T)) %>% 
  ungroup() %>% 
  pivot_longer(cols = 3:4) %>% 
  pivot_wider(names_from = group_assign_2014,
              values_from = value) %>% 
  ungroup() %>% 
  mutate(name = factor(name,c("cambio5","cambio_total"),c("PFF reduced in >5%",
                                                          "PFF reduced to 0"))) %>% 
  group_by(name) %>% 
  gt() %>% 
  cols_label(
    anio_fiscal = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 
  
  
```

#### Sub sample 2:

The firms are the ones in the core sample but also has net profits greater than zero.

The table count the number of firms in which the diference in ETR corresponds to the predicted ETR.

```{r}

ids_profit <- tabla_core %>%
  filter(anio_fiscal  == 2014,
         net_profits > 0) %>% 
  select(identificacion_informante_anon)

tasas <- tabla_core %>% 
  select(anio_fiscal,identificacion_informante_anon,tasa_ir,tasa_vigente) %>% 
  mutate(diferencia_tasa = tasa_ir - tasa_vigente )

compar2 %>%
  inner_join(ids_profit) %>% 
  left_join(tasas) %>% 
  mutate(
    predicted_tasa = case_when(
      porcentaje_aps_pff < 50 ~ 0.03*porcentaje_aps_pff,
      porcentaje_aps_pff >= 50 ~ 0.03,
      TRUE ~ 0.03),
    indicador = as.numeric(between(predicted_tasa - diferencia_tasa,-0.005,0.005))
  ) %>% 
  group_by(anio_fiscal,group_assign_2014) %>% 
  summarise(cambio = sum(indicador,na.rm = T)) %>% 
  ungroup() %>% 
  pivot_wider(names_from = group_assign_2014,
              values_from = cambio) %>% 
  ungroup() %>% 
  gt() %>% 
  cols_label(
    anio_fiscal = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 
  



```

#### Placebo 

We compare the years  2013 and 2014 to the pivot year 2012:

Changes in 2013:


    - If the group assigned in 2012 is "T-Maj" & the effective participation in tax havens in 2013 is < 50
    - If the group assigned in 2012 is "T-Min" & the effective participation in tax havens in 2013 is < 5
    - If the group assigned in 2012 is "C-Maj" & the effective participation in non tax havens in 2013 is < 50 
    - If the group assigned in 2012 is "C-Min" & the effective participation in non tax havens in 2013 is < 5 
    - Either case we assume no change between 2012 and 2013.
      
Changes in 2014:


    - If the group assigned in 2012 is "T-Maj" & the effective participation in tax havens in 2014 is < 50
    - If the group assigned in 2012 is "T-Min" & the effective participation in tax havens in 2014 is < 5
    - If the group assigned in 2012 is "C-Maj" & the effective participation in non tax havens in 2014 is < 50 
    - If the group assigned in 2012 is "C-Min" & the effective participation in non tax havens in 2014 is < 5 
    - Either case we assume no change between 2012 and 2014.
    
By contruction all values of changein 2014 is zero. 

```{r}
aps_core_2012 <- tabla_core_p %>% 
  filter(anio_fiscal == 2012)

aps_core_2012 <- aps_core_2012 %>% 
  rename_with(.cols = -identificacion_informante_anon,
              ~str_c(.x,"_2012"))


aps_core_2013 <- tabla_core_p %>% 
  filter(anio_fiscal == 2013)

aps_core_2013 <- aps_core_2013 %>% 
  rename_with(.cols = -identificacion_informante_anon,
              ~str_c(.x,"_2013"))

compar4 <- list(aps_core_2014,
     aps_core_2013,
     aps_core_2012) %>% 
  reduce(full_join)

compar4 %>% 
  mutate(
    cambio_2013 = case_when(
      group_assign_2012 == "T-Maj" & porcentaje_aps_pff_2013 < 50 ~ 1,
      group_assign_2012 == "T-Min" & porcentaje_aps_pff_2013 < 5 ~ 1,
      group_assign_2012 == "C-Maj" & porcentaje_aps_ext_2013 < 50 ~ 1,
      group_assign_2012 == "C-Min" & porcentaje_aps_ext_2013 < 5 ~ 1,
      TRUE ~ 0
    ),
    cambio_2014 = case_when(
      group_assign_2012 == "T-Maj" & porcentaje_aps_pff_2014 < 50 ~ 1,
      group_assign_2012 == "T-Min" & porcentaje_aps_pff_2014 < 5 ~ 1,
      group_assign_2012 == "C-Maj" & porcentaje_aps_ext_2014 < 50 ~ 1,
      group_assign_2012 == "C-Min" & porcentaje_aps_ext_2014 < 5 ~ 1,
      TRUE ~ 0
    )) %>% 
  group_by(group_assign_2012) %>% 
  summarise(cambios_2013 = sum(cambio_2013,na.rm = T),
            cambios_2014 = sum(cambio_2014,na.rm = T)) %>% 
  pivot_longer(-group_assign_2012) %>% 
  filter(!is.na(group_assign_2012)) %>% 
  pivot_wider(names_from = group_assign_2012,
              values_from = value) %>% 
  mutate(name = str_replace(name,"_"," ") %>% str_to_title()) %>% 
  gt() %>% 
  cols_label(
    name = "",
    `C-Domestic` = md("**C-Domestic**"),
    `C-Maj` = md("**C-Maj**"),
    `C-Min`= md("**C-Min**"),
    `Domestic` = md("**Domestic**"),
    `T-Maj` = md("**T-Maj**"),
    `T-Min` = md("**T-Min**") 
  ) 



```

